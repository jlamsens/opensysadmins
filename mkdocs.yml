site_name: OpenSysAdmins
site_url: https://www.opensysadmins.com
site_description: Standing on the shoulder of giants
site_author: Jurgen Lamsens
#site_favicon: favicon.ico

## display a link to the repository of your project as part of your documentation
## will be rendered next to the search bar on big screens and as part of the main navigation drawer on smaller screen sizes
## for public repositories hosted on GitHub or GitLab, the number of stars and forks is automatically requested and rendered
repo_url: https://github.com/jlamsens/opensysadmins

## if the repository URL points to a GitHub, GitLab or Bitbucket repository, an edit button is displayed at the top of each document
## you can hide it
edit_uri: ""

## MkDocs will infer the source provider by examining the URL and try to set the repository name automatically
## you can customize the name
# repo_name: jlamsens/opensysadmins

theme:
  name: material
  # custom_dir: docs/overrides
  features:
    ## clicks on all internal links will be intercepted and dispatched via XHR without fully reloading the page
    ## the resulting page is parsed and injected and all event handlers and components are rebound automatically, 
    ## i.e., Material for MkDocs now behaves like a Single Page Application
    ## now, the search index survives navigation, which is especially useful for large documentation sites
    - navigation.instant

    ## the URL in the address bar is automatically updated with the active anchor as highlighted in the table of contents
    - navigation.tracking

    ## top-level sections are rendered in a menu layer below the header for viewports above 1220px, but remain as-is on mobile
    #- navigation.tabs

    ## navigation tabs will lock below the header and always remain visible when scrolling down
    #- navigation.tabs.sticky

    ## top-level sections are rendered as groups in the sidebar for viewports above 1220px, but remain as-is on mobile
    ## both <navigation.tabs> and <navigation.sections> can be combined with each other
    ## if both are enabled, sections are rendered for level 2 navigation items
    #- navigation.sections

    ## when expansion is enabled, the left sidebar will expand all collapsible subsections by default,
    ## so the user doesn't have to open subsections manually
    #- navigation.expand
    
    ## documents can be directly attached to sections, which is particularly useful for providing overview pages
    - navigation.indexes

    ## a back-to-top button can be shown when the user, after scrolling down, starts to scroll up again
    ## rendered centered and just below the header
    - navigation.top

    ## table of contents is rendered as part of the navigation sidebar on the left
    ## not compatible with navigation.indexes
    #- toc.integrate

    ## search will display the likeliest completion for the last word which can be accepted with the <right> key
    #-search.suggest
    
    ## highlight all occurrences after following the link
    - search.highlight

    ## share button is rendered next to the reset button, which allows to deep link to the current search query and result
    ## when a user clicks the share button, the URL is automatically copied to the clipboard
    #-search.share

    ## the header is automatically hidden when the user scrolls past a certain threshold, leaving more space for content
    - header.autohide

    ## code blocks can automatically render a button on the right side to allow the user to copy a code block's contents to the clipboard
    - content.code.copy

  ## while the default repository icon is a generic git icon, it can be set to any icon bundled with the theme by referencing a valid icon path
  icon:
    repo: fontawesome/brands/github

  ## change the typeface, directly integrates with Google Fonts
  ## will be loaded in 300, 400, 400i and 700
  ## 
  font:
    ## the "regular font", used for all body copy, headlines
    ## and essentially everything that does not need to be monospaced
    text: ubuntu

    ## the "monospaced font" is used for code blocks and can be configured separately
    ## will be loaded in 400
    code: ubuntu mono
  
  palette: 
    - scheme: default
      ## primary color is used for the header, the sidebar, text links and several other components
      ## valid colors: red, pink, purple, deep purple, indigo, blue, light blue, cyan, teal, green light green,
      ## lime, yellow, amber, orange, deep orange, brown, grey, blue grey, black and white
      primary: teal

      ## accent color is used to denote elements that can be interacted with, e.g. hovered links, buttons and scrollbars
      ## valid colors: red, pink, purple, deep purple, indigo, blue, light blue, cyan, teal, green, light green, lime,
      ## yellow, amber, orange and deep orange
      # accent: red
      
      ## user can toggle between color palettes
      toggle:
        ## must point to a valid icon path referencing any icon bundled with the theme
        ## examples
        icon: material/weather-sunny
        
        ## should be set to a discernable name to improve accessibility, will appear on mouse hover
        name: Switch to dark mode
  
    - scheme: slate
      primary: teal 
      toggle:
        icon: material/weather-night
        name: Switch to light mode
  
  ## logo can be changed to a user-provided image (any type, incl. *.png and *.svg) located in the <docs> folder
  ## or to any icon bundled with the theme
  # logo: <docs/path-to-logo>

  ## normally, the logo in the header and sidebar links to the homepage of the documentation, which is the same as site_url
  ## this behavior can be changed
  # extra:
    #homepage: https://example.com

  ## favicon can be changed to a path pointing to a user-provided image located in the <docs> folder
  # favicon: <path-to-logo>

markdown_extensions:
    ## automatically generates a table of contents from a document, which Material for MkDocs will render as part of the resulting page
    - toc:
        ## default: automatically set to <Table of contents>
        ## sets the title of the table of contents in the right navigation sidebar,
        ## which is normally automatically sourced from the translations for the site language
        #title: My TOC name

        ## default: false
        ## adds an anchor link containing the paragraph symbol Â¶ or another custom symbol at the end of each headline,
        ## exactly like on the page you're currently viewing, which Material for MkDocs will make appear on hover
        #permalink: true

        ## default: permanent link
        ## sets the title of the anchor link which is shown on hover and read by screen readers
        ## For accessibility reasons, it might be beneficial to change it to a more discernable name,
        ## stating that the anchor links to the section itself
        # permalink_title: Anchor link to this section for reference

        ## default: headerid.slugify
        ## allows for customization of the slug function
        ## for some languages, the default may not produce good and readable identifiers,
        ## consider using another slug function like for example those from Python Markdown Extensions
        # slugify: !!python/name:pymdownx.slugs.uslugify

        #separator: "_"

        ## default: 6
        ## define the range of levels to be included in the table of contents
        ## may be useful for project documentation with deeply structured headings,
        ## to decrease the length of the table of contents, or to remove the table of contents altogether
        toc_depth: 3

    ## adds the ability to add a small tooltip to an element
    - abbr

    ## adds support for admonitions, more commonly known as call-outs
    - admonition

    ## adds the ability to add definition lists (more commonly known as description lists <dl> in HTML)
    #- def_list

    ## allows to add HTML attributes and CSS classes to almost every Markdown inline- and block-level element with a special syntax
    - attr_list

    ## allows for writing Markdown inside of HTML, which is useful for wrapping Markdown content with custom elements
    - md_in_html

    ## allows to define inline footnotes, which are then rendered below all Markdown content of a document
    - footnotes

    ## adds the ability to attach arbitrary key-value pairs to a document via front matter written in YAML syntax before the Markdown
    ## when <Metadata> is enabled, the navigation and/or table of contents sidebars can be hidden for a
    ## document with custom front matter using the following at the top of a Markdown file
    ## ---
    ## hide:
    ##   - navigation
    ##   - toc
    ## ---
    - meta
    
    ## adds the ability to create tables in Markdown by using a simple syntax
    - tables

    ## the <Python Markdown Extensions> package is an excellent collection of additional extensions,
    ## perfectly suited for advanced technical writing
    ## Material for MkDocs lists this package as an explicit dependency, so it's automatically installed
    ## with a supported version

    ## allows for rendering of block and inline block equations and integrates seamlessly with MathJax
    ## a MathJax configuration and the JavaScript runtime need to be included <see online documentation>
    #- pymdownx.arithmatex

    ## improves the detection of Markup to emphasize text in Markdown using special characters, i.e. for **bold** and _italic_ formatting
    # - pymdownx.betterem

    ## the Caret, Mark and Tilde extensions add the ability to highlight text and define sub- and superscript using a simple syntax
    # - pymdownx.caret
    # - pymdownx.mark
    # - pymdownx.tilde

    ## allows for the usage of Critic Markup to highlight added, deleted or updated sections in a document, i.e. for tracking changes in Markdown syntax
    # - pymdownx.critic

    ## supercharges the Admonition extension, making the resulting call-outs collapsible
    # - pymdownx.details

    ## automatically inlines bundled and custom icons and emojis in *.svg file format into the resulting HTML page
    - pymdownx.emoji:
    #   ## Python Markdown Extensions uses the pymdownx namespace, but in order to support the inlining of icons,
    #   ## the materialx namespace must be used, as it extends the functionality of pymdown
        emoji_index: !!python/name:material.extensions.emoji.twemoji
        emoji_generator: !!python/name:materialx.emoji.to_svg


    ## allows the usage of content tabs, a simple way to group related content and code blocks under accessible tabs
    - pymdownx.tabbed:

        ## default: false
        ## enables the content tabs alternate style, which has better behavior on mobile viewports, and is the only supported style
        alternate_style: true

    ## allows for arbitrary nesting of code and content blocks inside each other, including admonitions, tabs, lists and all other elements
    - pymdownx.superfences

    ## adds support for syntax highlighting of code blocks (with the help of <SuperFences>)
    ## and inline code blocks (with the help of <InlineHilite>)
    ## <Highlight> is used by the <SuperFences> extension to perform syntax highlighting on code blocks,
    ## not the other way round, which is why <Superfences> also needs to be enabled
    - pymdownx.highlight:
        ## default: true
        ## allows to control whether highlighting should be carried out during build time using <Pygments>
        ## or in the browser with a JavaScript syntax highlighte
        # use_pygments: true
        ## all following configuration options are only compatible with build-time syntax highlighting using <Pygments>

        ## default: false
        ## automatically add a title to all code blocks that shows the name of the language being used, e.g. Python is printed for a py block
        auto_title: true

        ## default: false
        ## add line numbers to all code blocks
        ## if you wish to add line numbers to some, but not all code blocks, consult the section on adding line numbers in the code block reference
        ## hich also contains some tips on working with line numbers
        linenums: true

        ## default: table
        ## provides three ways to add line numbers, two of which are supported by Material for MkDocs
        ## while table wraps a code block in a <table> element, pymdownx-inline renders line numbers as part of the line itself
        ## Note that <inline> will put line numbers next to the actual code, which means that they will be included when selecting text
        ## with the cursor or copying a code block to the clipboard
        ## thus, the usage of either <table> or <pymdownx-inline> is recommended
        #linenums_style: pymdownx-inline

        ## default: false
        ## If a code blocks contains line numbers, enabling this setting will wrap them with anchor links, so they can be hyperlinked and shared more easily
        anchor_linenums: true


    ## add support for syntax highlighting of inline code blocks
    ## built on top of the <Highlight> extension, from which it sources its configuration
    - pymdownx.inlinehilite

    ## adds a simple syntax to allow for the rendering of keyboard keys and combinations, e.g. ctrl+alt+del
    - pymdownx.keys

    ## converts some sequences of characters into their corresponding symbols, e.h. copyright symbols or fractions
    - pymdownx.smartsymbols

    ## adds the ability to embed content from arbitrary files into a document, including other documents or source files, 
    ## a glossary, by using a simple syntax
    #- pymdownx.snippets

    ## allows for the usage of GitHub Flavored Markdown inspired task lists, following the same syntactical conventions
    - pymdownx.tasklist:

        ## default: false
        ## toggles the rendering style of checkboxes, replacing native checkbox styles with beautiful icons, and is therefore recommended
        custom_checkbox: true

        ## default: false
        ## toggles whether checkboxes are clickable
        ## as the state is not persisted, the use of this option is rather discouraged from a user experience perspective
        # clickable_checkbox: true

plugins:
  ## built-in search plugin integrates seamlessly with Material for MkDocs, adding multilingual
  ## client-side search with <lunr> and <lunr-languages>
  ## enabled by default, but must be re-added when other plugins are used
  - search
    ## default: automatically set
    # lang: 
    #   - en
    #   - du
    #   - ...
    ## separator for indexing and query tokenization can be customized, making it possible to index parts
    ## of words separated by other characters than whitespace and -
    ## default: automatically set
    # seperator: '[\s\-\.]'
  
  ## add image zoom functionality
  ## see https://github.com/blueswen/mkdocs-glightbox#usage for configuration options
  - glightbox

extra:
  ## social links are rendered next to the copyright notice as part of the footer
  social:
    - icon: fontawesome/brands/facebook
      link: https://facebook.com/jessgandthemelons
      name: Campfire classics with Jess G and the Melons
    - icon: fontawesome/brands/linkedin
      link: https://www.linkedin.com/in/jurgen-lamsens-58692821/
      name: Jurgen Lamsens @work
  ## the footer displays a <Made with Material for MkDocs> notice to denote how the site was generated
  generator: false

## a custom copyright banner can be rendered as part of the footer, which is displayed next to the social links
copyright: Copyright &copy; 2022 Jurgen Lamsens

extra_css:
  - stylesheets/extra.css

exclude_docs: |
  howtos/template/index.md
  howtos/OLD
  tutorials/OLD


nav:
  - Home: index.md

  ####################################################################################

  - Blogs: #listed in header, must be unique
    - blogs/index.md # overview/landing page

    - 2024:
      - no matching cypher found: blogs/2024/no-matching-cypher-found.md
      - no matching key exchange method found: blogs/2024/no-matching-key-exchange-method-found.md

    - 2025:
      - a-sociale-media: blogs/2025/a-sociale-media.md
      #- Blog template: blogs/YYYY_template/blog_template.md
      #- Blog template: blogs/YYYY_template/blog_template.md
      #- Blog template: blogs/YYYY_template/blog_template.md

####################################################################################

  - Tutorials: #listed in header, must be unique
    - tutorials/index.md # overview/landing page

#    - Install a Windows 11 & Linux Mint 21 dual boot LAB-PC (BIOS) with local Clonezilla backup & restore:
#      - tutorials/windows11-linuxmint21-dual-boot-bios-clonezilla/index.md # overview/landing page
#      - 01 Getting started: tutorials/windows11-linuxmint21-dual-boot-bios-clonezilla/getting-started.md
#      - 02 Prepare installation media: tutorials/windows11-linuxmint21-dual-boot-bios-clonezilla/prepare-installation-media.md
#      - 03 Configure BIOS vs UEFI: tutorials/windows11-linuxmint21-dual-boot-bios-clonezilla/configure-bios-vs-uefi.md
#      - 04 Install Windows 11: tutorials/windows11-linuxmint21-dual-boot-bios-clonezilla/install-windows11.md
#      - 05 Configure Windows 11: tutorials/windows11-linuxmint21-dual-boot-bios-clonezilla/configure-windows11.md
#      - 06 Install Linux Mint 21: tutorials/windows11-linuxmint21-dual-boot-bios-clonezilla/install-linuxmint21.md
#      - 07 Configure Linux Mint 21: tutorials/windows11-linuxmint21-dual-boot-bios-clonezilla/configure-linuxmint21.md
#     - 08 GRUB configuration: tutorials/windows11-linuxmint21-dual-boot-bios-clonezilla/grub-configuration.md
#      - 09 Create storage partition: tutorials/windows11-linuxmint21-dual-boot-bios-clonezilla/create-storage-partition.md
#      - 10 Create Clonezilla network backup: tutorials/windows11-linuxmint21-dual-boot-bios-clonezilla/create-clonezilla-network-backup.md
#      - 11 Restore Clonezilla network backup: tutorials/windows11-linuxmint21-dual-boot-bios-clonezilla/restore-clonezilla-network-backup.md
#      - 12 Activate Windows: tutorials/windows11-linuxmint21-dual-boot-bios-clonezilla/activate-windows.md
#      - 13 Create local Clonezilla dump: tutorials/windows11-linuxmint21-dual-boot-bios-clonezilla/create-local-clonezilla-dump.md
#      - 14 Final result: tutorials/windows11-linuxmint21-dual-boot-bios-clonezilla/final-result.md

    - Setup van een Windows 11 en Linux Mint 22 dual boot PC (UEFI):
      - tutorials/setup-windows11-linuxmint22-dual-boot-uefi/index.md # overview/landing page
      - 01 Vereisten: tutorials/setup-windows11-linuxmint22-dual-boot-uefi/01-vereisten.md
      - 02 Installatiemedia: tutorials/setup-windows11-linuxmint22-dual-boot-uefi/02-installatiemedia.md
      - 03 Voorbereiding: tutorials/setup-windows11-linuxmint22-dual-boot-uefi/03-voorbereiding.md
      - 04 Setup Windows 11: tutorials/setup-windows11-linuxmint22-dual-boot-uefi/04-setup-windows11.md
      - 05 Setup Linux Mint 22: tutorials/setup-windows11-linuxmint22-dual-boot-uefi/05-setup-linuxmint22.md
      - 06 Controle en eindresultaat: tutorials/setup-windows11-linuxmint22-dual-boot-uefi/06-controle-eindresultaat.md
      - 07 Conclusie: tutorials/setup-windows11-linuxmint22-dual-boot-uefi/07-conclusie.md

    - Setup van een Windows 11 virtuele machine in VirtualBox:
      - tutorials/setup-windows11-vm-virtualbox/index.md # overview/landing page
      - 01 Vereisten: tutorials/setup-windows11-vm-virtualbox/01-vereisten.md
      - 02 Installatiemedia: tutorials/setup-windows11-vm-virtualbox/02-installatiemedia.md
      - 03 Voorbereiding: tutorials/setup-windows11-vm-virtualbox/03-voorbereiding.md
      - 04 Setup Windows 11: tutorials/setup-windows11-vm-virtualbox/04-setup-windows11.md
      - 05 Sysprep en snapshots: tutorials/setup-windows11-vm-virtualbox/05-sysprep-snapshot-windows11.md
      - 06 Conclusie: tutorials/setup-windows11-vm-virtualbox/06-conclusie.md
  
    - Setup van een Windows Server 2025 virtuele machine in VirtualBox:
      - tutorials/setup-windows-server2025-vm-virtualbox/index.md # overview/landing page
      - 01 Vereisten: tutorials/setup-windows-server2025-vm-virtualbox/01-vereisten.md
      - 02 Installatiemedia: tutorials/setup-windows-server2025-vm-virtualbox/02-installatiemedia.md
      - 03 Voorbereiding: tutorials/setup-windows-server2025-vm-virtualbox/03-voorbereiding.md
      - 04 Setup Windows Server 2025: tutorials/setup-windows-server2025-vm-virtualbox/04-setup-windows-server2025.md
      - 05 Snapshot: tutorials/setup-windows-server2025-vm-virtualbox/05-snapshot-windows-server2025.md
      - 06 Conclusie: tutorials/setup-windows-server2025-vm-virtualbox/06-conclusie.md

    - Setup van een Linux Mint 22 virtuele machine in VirtualBox:
      - tutorials/setup-linuxmint22-vm-virtualbox/index.md # overview/landing page
      - 01 Vereisten: tutorials/setup-linuxmint22-vm-virtualbox/01-vereisten.md
      - 02 Installatiemedia: tutorials/setup-linuxmint22-vm-virtualbox/02-installatiemedia.md
      - 03 Voorbereiding: tutorials/setup-linuxmint22-vm-virtualbox/03-voorbereiding.md
      - 04 Setup Linux Mint 22: tutorials/setup-linuxmint22-vm-virtualbox/04-setup-linuxmint22.md
      - 05 Snapshot: tutorials/setup-linuxmint22-vm-virtualbox/05-snapshot-linuxmint22.md
      - 06 Conclusie: tutorials/setup-linuxmint22-vm-virtualbox/06-conclusie.md

    - Setup van een Debian 13 virtuele machine in VirtualBox:
      - tutorials/setup-debian13-vm-virtualbox/index.md # overview/landing page
      - 01 Vereisten: tutorials/setup-debian13-vm-virtualbox/01-vereisten.md
      - 02 Installatiemedia: tutorials/setup-debian13-vm-virtualbox/02-installatiemedia.md
      - 03 Voorbereiding: tutorials/setup-debian13-vm-virtualbox/03-voorbereiding.md
      - 04 Setup Debian 13: tutorials/setup-debian13-vm-virtualbox/04-setup-debian13.md
      - 05 Snapshot: tutorials/setup-debian13-vm-virtualbox/05-snapshot-debian13.md
      - 06 Conclusie: tutorials/setup-debian13-vm-virtualbox/06-conclusie.md

 #   - Setup van een testlab in VirtualBox:
 #    - tutorials/setup-testlab-virtualbox/index.md # overview/landing page
 #    - 01 Vereisten: tutorials/setup-testlab-virtualbox/01-vereisten.md
 #    - 02 Kloon VMs: tutorials/setup-testlab-virtualbox/02-kloon-vms.md
 #    - 03 Configureer VMs: tutorials/setup-testlab-virtualbox/03-configureer-vms.md
 #    - 04 Configureer OS: tutorials/setup-testlab-virtualbox/04-configureer-os.md
 #    - 05 Snapshot VMs: tutorials/setup-testlab-virtualbox/05-snapshot-vms.md
 #    - 06 Controle eindresultaat: tutorials/setup-testlab-virtualbox/06-controle-eindresultaat.md
 #    - 07 Conclusie: tutorials/setup-testlab-virtualbox/07-conclusie.md
  
####################################################################################

  - Howtos: #listed in header, must be unique
    - howtos/index.md # overview/landing page

  # Howto template
  #  - Howto_template: howtos/howto_template/index.md
  #  - Howto_template: howtos/howto_template/index.md
  #  - Howto_template: howtos/howto_template/index.md

    - Setup Google Chrome op Linux Mint 22: howtos/setup-chrome-linuxmint22/index.md
    - Setup Packet Tracer 8.2.2 op Linux Mint 22: howtos/setup-packettracer822-linuxmint22/index.md
      
####################################################################################

   # References
  - References: #listed in header, must be unique
    - references/index.md # overview/landing page

####################################################################################

   # Explanations
  - Explanations: #listed in header, must be unique
    - explanations/index.md # overview/landing page

    - Cisco switch and router components: explanations/cisco-switch-router-components/index.md
    - Cisco switch and router boot sequence: explanations/cisco-switch-router-boot-sequence/index.md
    - Password recovery mechanism: explanations/password-recovery-mechanism/index.md
    - Break sequence mechanism: explanations/break-sequence-mechanism/index.md

####################################################################################

#   # Bike routes
#  - Bike routes: #listed in header, must be unique
#    - bike routes/index.md # overview/landing page
#
#    - Gent: bike routes/gent/index.md

####################################################################################